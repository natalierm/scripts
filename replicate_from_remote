#!/bin/bash

. $(dirname $0)/functions

if [ "${REMOTE_DB_UNAME}" = "" ]; then
    echo "Couldn't find DB_NAME"
    echo "Ensure you have created a configuration similar to the"
    echo "$(basename $0).conf.sample provided"
    exit
fi

if [ "${REMOTE_USER}" = "" ]; then
    REMOTE_USER=${USER}
fi

echo '**********************************************'
echo '*'
echo '* Before you begin:'
echo '*'
echo "* Get the $REMOTE_DB_UNAME password for $REMOTE_HOST"
echo "* Get the $LOCAL_DB_UNAME password for $(hostname)"
echo "* Have an account on $REMOTE_HOST"
echo "* Have root sudo access on $(hostname) (this machine)"
echo '*'
echo '**********************************************'
echo "Press a key to continue or ctrl-c to exit"
read

echo "Synchronising the directories"

index=0
for i in ${REMOTE_DIRS[@]}; do
    echo "Synchronising $i"
    sudo mkdir -p ${LOCAL_DIRS[$index]}
    sudo rsync -chavzP $DRY_RUN --stats "${REMOTE_USER}@${REMOTE_HOST}:$i" ${LOCAL_DIRS[$index]}
    sudo chown -R ${LOCAL_FILE_USER}:${LOCAL_FILE_GROUP} ${LOCAL_DIRS[$index]}
    ((index++))
done

TEMP_FILE=${TMPDIR}/data.$$.tmp
echo Replicating database
if pv -h > /dev/null; then
    $LOCAL_DB_BINDIR/pg_dump -h $REMOTE_HOST -U $REMOTE_DB_UNAME -C $DB_NAME | pv -trb > $TEMP_FILE
else
    $LOCAL_DB_BINDIR/pg_dump -h $REMOTE_HOST -U $REMOTE_DB_UNAME -C $DB_NAME > $TEMP_FILE
fi

echo -e '\a'
echo -e '\a'
echo -e '\a'
echo -e '\a'

echo "You are about to backup and drop the existing $DB_NAME database"
echo "at this point"
echo "Be careful!!"
echo "Press enter to continue"
read

if psql -lqt | cut -d \| -f 1 | grep -w $DB_NAME; then
    echo "DB Already exists.  Backing up"
    TEMP_FILE2=${TMPDIR}/data.$$.tmp.2
    if pv -h > /dev/null; then
        $LOCAL_DB_BINDIR/pg_dump -U $LOCAL_DB_UNAME -C $DB_NAME | pv -trb > $TEMP_FILE2
    else
        $LOCAL_DB_BINDIR/pg_dump -U $LOCAL_DB_UNAME -C $DB_NAME  > $TEMP_FILE2
    fi
    if [ "$?" = "1" ]; then
        echo "Couldn't back up DB cleanly - exiting."
    fi
    $LOCAL_DB_BINDIR/dropdb -U $LOCAL_DB_UNAME $DB_NAME
fi

echo Restoring db locally
if pv -h > /dev/null; then
    pv $TEMP_FILE | sudo -u $LOCAL_DB_UNAME $LOCAL_DB_BINDIR/psql -q --set ON_ERROR_STOP=on postgres
else
    sudo -u $LOCAL_DB_UNAME $LOCAL_DB_BINDIR/psql -q --set ON_ERROR_STOP=on postgres
fi
